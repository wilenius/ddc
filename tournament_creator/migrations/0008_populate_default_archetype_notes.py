# Generated by Django 5.1.5 on 2025-10-03 08:21

from django.db import migrations


def populate_archetype_notes(apps, schema_editor):
    """Add default notes to tournament archetypes."""
    TournamentArchetype = apps.get_model('tournament_creator', 'TournamentArchetype')

    # Default notes for various tournament formats
    archetype_notes = {
        "8-player Monarch of the Court": (
            "Everyone plays against everyone else exactly twice, and with everyone else exactly once!\n\n"
            "Analysis: Pair 1&2's power is mitigated by matching them against pair 7&8 in round 3."
        ),
        "5-player Monarch of the Court": (
            "5-player format description here..."
        ),
        "6-player Monarch of the Court": (
            "6-player format description here..."
        ),
        "11-player Monarch of the Court": (
            "Seeds 1 & 2 receive one automatic win each to balance the fact they play one fewer match than other players."
        ),
        # Add more default notes here as needed
    }

    for archetype_name, notes in archetype_notes.items():
        try:
            archetype = TournamentArchetype.objects.get(name=archetype_name)
            archetype.notes = notes
            archetype.save()
        except TournamentArchetype.DoesNotExist:
            pass  # Archetype doesn't exist yet, skip


class Migration(migrations.Migration):

    dependencies = [
        ('tournament_creator', '0007_add_notes_to_archetype'),
    ]

    operations = [
        migrations.RunPython(populate_archetype_notes, reverse_code=migrations.RunPython.noop),
    ]
